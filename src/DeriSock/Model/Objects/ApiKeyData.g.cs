// --------------------------------------------------------------------------
// <auto-generated>
//      This code was generated by a tool.
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
// </auto-generated>
// --------------------------------------------------------------------------
#pragma warning disable CS1591
#nullable enable
namespace DeriSock.Model
{
  using System;
  using DeriSock.Converter;
  
  /// <summary>
  /// </summary>
  [System.CodeDom.Compiler.GeneratedCodeAttribute("DeriSock.DevTools", "0.3.5")]
  public partial class ApiKeyData
  {
    /// <summary>
    /// <para>Client identifier used for authentication</para>
    /// </summary>
    [System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [Newtonsoft.Json.JsonPropertyAttribute("client_id")]
    public string ClientId { get; set; } = string.Empty;
    /// <summary>
    /// <para>Client secret used for authentication</para>
    /// </summary>
    [System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [Newtonsoft.Json.JsonPropertyAttribute("client_secret")]
    public string ClientSecret { get; set; } = string.Empty;
    /// <summary>
    /// <para>Informs whether this api key is default (field is deprecated and will be removed in the future)</para>
    /// </summary>
    [System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [System.ObsoleteAttribute()]
    [Newtonsoft.Json.JsonPropertyAttribute("default")]
    public bool Default { get; set; }
    /// <summary>
    /// <para>Informs whether api key is enabled and can be used for authentication</para>
    /// </summary>
    [System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [Newtonsoft.Json.JsonPropertyAttribute("enabled")]
    public bool Enabled { get; set; }
    /// <summary>
    /// <para>key identifier</para>
    /// </summary>
    [System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [Newtonsoft.Json.JsonPropertyAttribute("id")]
    public int Id { get; set; }
    /// <summary>
    /// <para>Describes maximal access for tokens generated with given key, possible values: <c>trade:[read, read_write, none]</c>, <c>wallet:[read, read_write, none]</c>, <c>account:[read, read_write, none]</c>, <c>block_trade:[read, read_write, none]</c>. If scope is not provided, it value is set as none.</para>
    /// <para>Please check details described in <a href="https://docs.deribit.com/#access-scope">Access scope</a></para>
    /// </summary>
    [System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [Newtonsoft.Json.JsonPropertyAttribute("max_scope")]
    public string MaxScope { get; set; } = string.Empty;
    /// <summary>
    /// <para>Api key name that can be displayed in transaction log</para>
    /// </summary>
    [System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [Newtonsoft.Json.JsonPropertyAttribute("name")]
    public string Name { get; set; } = string.Empty;
    /// <summary>
    /// <para>The timestamp (milliseconds since the Unix epoch)</para>
    /// </summary>
    [System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [Newtonsoft.Json.JsonPropertyAttribute("timestamp")]
    [Newtonsoft.Json.JsonConverter(typeof(MillisecondsTimestampConverter))]
    public DateTime Timestamp { get; set; }
  }
}
