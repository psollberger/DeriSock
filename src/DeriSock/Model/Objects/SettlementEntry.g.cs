// --------------------------------------------------------------------------
// <auto-generated>
//      This code was generated by a tool.
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
// </auto-generated>
// --------------------------------------------------------------------------
#pragma warning disable CS1591
#nullable enable
namespace DeriSock.Model
{
  using System;
  using DeriSock.Converter;
  
  /// <summary>
  /// </summary>
  [System.CodeDom.Compiler.GeneratedCodeAttribute("DeriSock.DevTools", "2.0.0")]
  public partial class SettlementEntry
  {
    /// <summary>
    /// <para>funded amount (bankruptcy only)</para>
    /// </summary>
    [System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [Newtonsoft.Json.JsonPropertyAttribute("funded")]
    public decimal? Funded { get; set; }
    /// <summary>
    /// <para>funding (in base currency ; settlement for perpetual product only)</para>
    /// </summary>
    [System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [Newtonsoft.Json.JsonPropertyAttribute("funding")]
    public decimal? Funding { get; set; }
    /// <summary>
    /// <para>underlying index price at time of event (in quote currency; settlement and delivery only)</para>
    /// </summary>
    [System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [Newtonsoft.Json.JsonPropertyAttribute("index_price")]
    public decimal? IndexPrice { get; set; }
    /// <summary>
    /// <para>instrument name (settlement and delivery only)</para>
    /// </summary>
    [System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [Newtonsoft.Json.JsonPropertyAttribute("instrument_name")]
    public string? InstrumentName { get; set; }
    /// <summary>
    /// <para>mark price for at the settlement time (in quote currency; settlement and delivery only)</para>
    /// </summary>
    [System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [Newtonsoft.Json.JsonPropertyAttribute("mark_price")]
    public decimal? MarkPrice { get; set; }
    /// <summary>
    /// <para>position size (in quote currency; settlement and delivery only)</para>
    /// </summary>
    [System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [Newtonsoft.Json.JsonPropertyAttribute("position")]
    public decimal? Position { get; set; }
    /// <summary>
    /// <para>profit and loss (in base currency; settlement and delivery only)</para>
    /// </summary>
    [System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [Newtonsoft.Json.JsonPropertyAttribute("profit_loss")]
    public decimal? ProfitLoss { get; set; }
    /// <summary>
    /// <para>value of session bankruptcy (in base currency; bankruptcy only)</para>
    /// </summary>
    [System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [Newtonsoft.Json.JsonPropertyAttribute("session_bankruptcy")]
    public decimal? SessionBankruptcy { get; set; }
    /// <summary>
    /// <para>total value of session profit and losses (in base currency)</para>
    /// </summary>
    [System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [Newtonsoft.Json.JsonPropertyAttribute("session_profit_loss")]
    public decimal SessionProfitLoss { get; set; }
    /// <summary>
    /// <para>total amount of paid taxes/fees (in base currency; bankruptcy only)</para>
    /// </summary>
    [System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [Newtonsoft.Json.JsonPropertyAttribute("session_tax")]
    public decimal? SessionTax { get; set; }
    /// <summary>
    /// <para>rate of paid taxes/fees (in base currency; bankruptcy only)</para>
    /// </summary>
    [System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [Newtonsoft.Json.JsonPropertyAttribute("session_tax_rate")]
    public decimal? SessionTaxRate { get; set; }
    /// <summary>
    /// <para>the amount of the socialized losses (in base currency; bankruptcy only)</para>
    /// </summary>
    [System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [Newtonsoft.Json.JsonPropertyAttribute("socialized")]
    public decimal? Socialized { get; set; }
    /// <summary>
    /// <para>The timestamp (milliseconds since the Unix epoch)</para>
    /// </summary>
    [System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [Newtonsoft.Json.JsonPropertyAttribute("timestamp")]
    [Newtonsoft.Json.JsonConverter(typeof(MillisecondsTimestampConverter))]
    public DateTime Timestamp { get; set; }
    /// <summary>
    /// <para>The type of settlement. <c>settlement</c>, <c>delivery</c> or <c>bankruptcy</c>.</para>
    /// </summary>
    [System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [Newtonsoft.Json.JsonPropertyAttribute("type")]
    public string Type { get; set; } = string.Empty;
  }
}
