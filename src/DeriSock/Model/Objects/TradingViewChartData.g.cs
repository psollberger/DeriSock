// --------------------------------------------------------------------------
// <auto-generated>
//      This code was generated by a tool.
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
// </auto-generated>
// --------------------------------------------------------------------------
#pragma warning disable CS1591
#nullable enable
namespace DeriSock.Model
{
  
  /// <summary>
  /// </summary>
  [System.CodeDom.Compiler.GeneratedCodeAttribute("DeriSock.DevTools", "0.3.5")]
  public partial class TradingViewChartData
  {
    /// <summary>
    /// <para>List of prices at close (one per candle)</para>
    /// </summary>
    [System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [Newtonsoft.Json.JsonPropertyAttribute("close")]
    public decimal[] Close { get; set; } = System.Array.Empty<System.Decimal>();
    /// <summary>
    /// <para>List of cost bars (volume in quote currency, one per candle)</para>
    /// </summary>
    [System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [Newtonsoft.Json.JsonPropertyAttribute("cost")]
    public decimal[] Cost { get; set; } = System.Array.Empty<System.Decimal>();
    /// <summary>
    /// <para>List of highest price levels (one per candle)</para>
    /// </summary>
    [System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [Newtonsoft.Json.JsonPropertyAttribute("high")]
    public decimal[] High { get; set; } = System.Array.Empty<System.Decimal>();
    /// <summary>
    /// <para>List of lowest price levels (one per candle)</para>
    /// </summary>
    [System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [Newtonsoft.Json.JsonPropertyAttribute("low")]
    public decimal[] Low { get; set; } = System.Array.Empty<System.Decimal>();
    /// <summary>
    /// <para>List of prices at open (one per candle)</para>
    /// </summary>
    [System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [Newtonsoft.Json.JsonPropertyAttribute("open")]
    public decimal[] Open { get; set; } = System.Array.Empty<System.Decimal>();
    /// <summary>
    /// <para>Status of the query: <c>ok</c> or <c>no_data</c></para>
    /// </summary>
    [System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [Newtonsoft.Json.JsonPropertyAttribute("status")]
    public string Status { get; set; } = string.Empty;
    /// <summary>
    /// <para>Values of the time axis given in milliseconds since UNIX epoch</para>
    /// </summary>
    [System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [Newtonsoft.Json.JsonPropertyAttribute("ticks")]
    public int[] Ticks { get; set; } = System.Array.Empty<System.Int32>();
    /// <summary>
    /// <para>List of volume bars (in base currency, one per candle)</para>
    /// </summary>
    [System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [Newtonsoft.Json.JsonPropertyAttribute("volume")]
    public decimal[] Volume { get; set; } = System.Array.Empty<System.Decimal>();
  }
}
